//
//  MainInteractor.swift
//  wikiDog
//
//  Created by Daniel Romero on 25-11-19.
//  Copyright (c) 2019 Dromero. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainBusinessLogic
{
  func loadBreedsRequest(request: Main.Requestbreeds.Request)
  func selectBreeds(request: Main.SelectBreeds.Request)
}

protocol MainDataStore
{
  var name: String { get set }
}

class MainInteractor: MainBusinessLogic, MainDataStore
{
  var presenter: MainPresentationLogic?
  var worker: MainWorker?
  var name: String = ""
  
  func loadBreedsRequest(request: Main.Requestbreeds.Request)
  {
    worker = MainWorker()
    worker?.getBreeds()
      {[] (isOk,breeds,message) in
       switch isOk
        {
        case true:
          
          Breeds.updateBreeds(breeds: breeds)
          /*
          for breed in message
          {
            let TFbreed = Breeds()
            TFbreed.name = breed.key as! String
            TFbreed.save()
          }*/
          
          let breeds = Breeds.all()
          let response = Main.Requestbreeds.Response(breeds:breeds, isError: false, message: "")
          self.presenter?.presentFetchDogs(response: response)
        case false:
          let breeds = Breeds.all()
          let response = Main.Requestbreeds.Response(breeds:breeds, isError: true, message: message)
          self.presenter?.presentFetchDogs(response: response)
        }
    }
  }
  
  func selectBreeds(request: Main.SelectBreeds.Request)
  {
    self.name = request.name
    let response = Main.SelectBreeds.Response()
    self.presenter?.presentSelectDog(response: response)
  }
  
}
