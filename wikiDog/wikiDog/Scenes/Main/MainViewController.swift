//
//  MainViewController.swift
//  wikiDog
//
//  Created by Daniel Romero on 25-11-19.
//  Copyright (c) 2019 Dromero. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainDisplayLogic: class
{
 
}

class MainViewController: UIViewController, MainDisplayLogic,ActivityIndicatorPresenter
{
  var interactor: MainBusinessLogic?
  var router: (NSObjectProtocol & MainRoutingLogic & MainDataPassing)?
  
  
  // MARK: Object lifecycle
  var activityIndicator = UIActivityIndicatorView()
  
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = MainInteractor()
    let presenter = MainPresenter()
    let router = MainRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    configureNavegationBar()
  }
  
 /// NavigationBar
  func configureNavegationBar()
  {
    
    let navLabel = UILabel()
    let fullString = NSMutableAttributedString(string: Constants.Messages.General.navTextFirst)
    let image1Attachment = NSTextAttachment()
    image1Attachment.image = Constants.Images.ic_asset_icon
    let image1String = NSAttributedString(attachment: image1Attachment)
    fullString.append(image1String)
    fullString.append(NSAttributedString(string: Constants.Messages.General.navTextLast))
    navLabel.attributedText = fullString
    self.navigationItem.titleView = navLabel
    
    
    navigationController?.navigationBar.titleTextAttributes = [.foregroundColor: Constants.Colors.backgroundColor]
  }
}
