//
//  MainInteractorTests.swift
//  wikiDog
//
//  Created by Daniel Romero on 25-11-19.
//  Copyright (c) 2019 Dromero. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import wikiDog
import XCTest

class MainInteractorTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: MainInteractor!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupMainInteractor()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupMainInteractor()
  {
    sut = MainInteractor()
  }
  
  // MARK: Test doubles
  
  class MainPresentationLogicSpy: MainPresentationLogic
  {
    
    var presentBreedCalled = true
    
    func presentFetchDogs(response: Main.Requestbreeds.Response) {
      
    }
    
    func presentSelectDog(response: Main.SelectBreeds.Response) {
      
    }
  }
  
  // MARK: Tests
  
  // Will check the correct flow of presentation
  func testBreedShouldNotPassDataToPresenterOnFailure()
   {
     // Given
     let spy = MainPresentationLogicSpy()
     sut.presenter = spy
     let request = Main.Requestbreeds.Request()
     
     // When
     sut.loadBreedsRequest(request: request)
     
     // Then
     XCTAssertTrue(spy.presentBreedCalled, "Requestbreeds(request:) should ask the presenter to format the result")
   }
  
  // Test as example of check the total amount of breeds (should be 90 as today)
  func testBreedCount()
  {
    // Given
    let spy = MainPresentationLogicSpy()
    sut.presenter = spy
    let request = Main.Requestbreeds.Request()
    
    // When
    sut.loadBreedsRequest(request: request)
    let breeds = Breeds.all()
   
    // Then
    XCTAssertEqual(breeds.count, 90, "should result in an 90 breeds")
    
  }
}
