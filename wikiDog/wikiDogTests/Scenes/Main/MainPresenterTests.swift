//
//  MainPresenterTests.swift
//  wikiDog
//
//  Created by Daniel Romero on 25-11-19.
//  Copyright (c) 2019 Dromero. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import wikiDog
import XCTest

class MainPresenterTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: MainPresenter!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupMainPresenter()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupMainPresenter()
  {
    sut = MainPresenter()
  }
  
  // MARK: Test doubles
  
  class MainDisplayLogicSpy: MainDisplayLogic
  {
    
    var mainDisplayViewModel: Main.Requestbreeds.ViewModel!
    
    func errorFetchDogs(viewModel: Main.Requestbreeds.ViewModel) {
      
    }
    
    func successFetchDogs(viewModel: Main.Requestbreeds.ViewModel) {
      
    }
    
    func successSelectDogs(viewModel: Main.SelectBreeds.ViewModel) {
      
    }
    
  }
  
  // MARK: Tests
  // Test as example the first and last name of the breeds from server
  func testPresentBreedNames()
  {
    // Given
    let spy = MainDisplayLogicSpy()
    sut.viewController = spy
    
    let breeds = Breeds.all().sorted(byKeyPath: "name", ascending: true)
    print(breeds)
    
    // Then
    XCTAssertEqual(breeds.first?.name, "affenpinscher", "should result first breed affenpinscher")
    XCTAssertEqual(breeds.last?.name, "wolfhound", "should result last breed wolfhound")
    
  }
}
